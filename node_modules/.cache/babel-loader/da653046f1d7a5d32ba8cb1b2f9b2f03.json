{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Personal\\\\Desktop\\\\Hatch\\\\cars-app\\\\src\\\\components\\\\CarByYear.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CarByYear = ({\n  onYearOption,\n  handleChange,\n  year,\n  infoYear\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"year\",\n        children: \"A\\xF1o del coche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"year\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => onYearOption(year),\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            padding: \"default\",\n            children: \"CoverageType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            padding: \"default\",\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"default\",\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"default\",\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"default\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"default\",\n            children: \"Extra Coverage Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"default\",\n            children: \"Year Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: infoYear.map(el => [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            padding: \"default\",\n            children: el.coverageType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            padding: \"default\",\n            children: el._id ? el._id : \"No results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            padding: \"default\",\n            children: el.brand ? el.brand : \"No results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            padding: \"default\",\n            children: el.company ? el.company : \"No results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            padding: \"default\",\n            children: el.price ? el.price : \"No results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            padding: \"default\",\n            children: el.extraCoveragePrice ? el.extraCoveragePrice : \"No results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            padding: \"default\",\n            children: el.yearRange ? `${el.yearRange[0]} -  ${el.yearRange[1]}` : \"No results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, el._id ? el._id : \"No results\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = CarByYear;\nCarByYear.propTypes = {};\nexport default CarByYear;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarByYear\");","map":{"version":3,"sources":["C:/Users/Personal/Desktop/Hatch/cars-app/src/components/CarByYear.jsx"],"names":["React","PropTypes","FormControl","InputLabel","Input","Button","Table","TableBody","TableCell","TableHead","TableRow","CarByYear","onYearOption","handleChange","year","infoYear","map","el","coverageType","_id","brand","company","price","extraCoveragePrice","yearRange","propTypes"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst CarByYear = ({onYearOption,handleChange,year,infoYear}) => {\r\n    return (\r\n        <>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"year\">Año del coche</InputLabel>\r\n              <Input id=\"year\" onChange={handleChange}/>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Button variant=\"contained\" color=\"primary\" onClick = {() => onYearOption(year)} >\r\n                 Buscar\r\n            </Button>\r\n            </FormControl>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                    <TableCell padding=\"default\">CoverageType</TableCell>\r\n                    <TableCell padding=\"default\">Id</TableCell>\r\n                    <TableCell align=\"default\">Brand</TableCell>\r\n                    <TableCell align=\"default\">Company</TableCell>\r\n                    <TableCell align=\"default\">Price</TableCell>\r\n                    <TableCell align=\"default\">Extra Coverage Price</TableCell>\r\n                    <TableCell align=\"default\">Year Range</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                 \r\n                    {infoYear.map(el => ([ \r\n                    <TableRow key={el._id ? el._id: \"No results\" }>\r\n                        <TableCell padding=\"default\">{el.coverageType}</TableCell>\r\n                        <TableCell padding=\"default\">{el._id ? el._id: \"No results\" }</TableCell>\r\n                        <TableCell padding=\"default\">{el.brand ? el.brand: \"No results\" }</TableCell>\r\n                        <TableCell padding=\"default\">{el.company ? el.company: \"No results\" }</TableCell>\r\n                        <TableCell padding=\"default\">{el.price ? el.price: \"No results\" }</TableCell>\r\n                        <TableCell padding=\"default\">{el.extraCoveragePrice ? el.extraCoveragePrice: \"No results\" }</TableCell>\r\n                        <TableCell padding=\"default\">{el.yearRange ? `${el.yearRange[0]} -  ${el.yearRange[1]}`: \"No results\"    }</TableCell> \r\n                    </TableRow>\r\n                    ]))}\r\n                </TableBody>\r\n             </Table>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nCarByYear.propTypes = {\r\n\r\n}\r\n\r\nexport default CarByYear\r\n"]},"metadata":{},"sourceType":"module"}